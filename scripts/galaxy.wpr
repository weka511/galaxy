#!wing
#!version=10.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('..'),
                        'excludes': ['scripts/collision.xml'],
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True}]
proj.file-type = 'normal'
proj.launch-config = {loc('timing.py'): ('project',
        ('galaxy-2025-08-04-20-31-48.log --show',
         ''))}
[user attributes]
debug.recent-run-args = {loc('timing.py'): ['galaxy-2025-08-04-20-31-48.log --show',
        'galaxy-2025-08-04-20-31-48.log --show  --bins scott',
        'galaxy-2025-08-04-20-31-48.log --show  --bins doane',
        'galaxy-2025-08-04-20-31-48.log --show  --bins 25',
        '--show']}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'dtaAtJloNhSft7SabFzspl0xqEmVIDbK',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [3],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/lib/npyio.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/lib/npyio.py'),
                      'array_function_dispatch')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/PIL/Image.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/PIL/Image.py'),
                      'alpha_composite')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/statistics.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/statistics.py'),
                      'correlation')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/framework/func_graph.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/framework/func_graph.py'),
                      'check_mutation')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/keras/layers/core.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/keras/layers/core.py'),
                      'Activation')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'),
                      'ADAPTIVE')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'),
                      'Axes')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'),
                      '_AxesBase')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'),
                      'GridSpec')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'),
                      'TexManager')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/numpy/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/numpy/conftest.py'),
                      '')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'),
                      'bool_t')]},
        loc('../../anaconda3/Lib/_collections_abc.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../anaconda3/Lib/_collections_abc.py'),
                      'AsyncGenerator')]},
        loc('../../bioinformatics/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../complexity/el-farol/bar.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../complexity/el-farol/bar.py'),
                      'ElFarol')]},
        loc('../../dynamics/chaos_book/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../dynamics/chaos_book/chapter9/pinball.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/chaos_book/chapter9/pinball.py'),
                      'args')]},
        loc('../../learn/README.md'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('../../learn/bayes1.py'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('generic attribute',
        loc('../../learn/bayes1.py'),
        'alphas')]},
        loc('../../learn/cavi1.py'): {'expanded-nodes': [],
                                      'selected-nodes': [[('generic attribute',
        loc('../../learn/cavi1.py'),
        'ys')]],
                                      'top-node': [('generic attribute',
        loc('../../learn/cavi1.py'),
        'ax1')]},
        loc('../../learn/fashion.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../learn/fashion.py'),
                             '_')]],
        'top-node': [('generic attribute',
                      loc('../../learn/fashion.py'),
                      'class_names')]},
        loc('../../learn/fcs.py'): {'expanded-nodes': [],
                                    'selected-nodes': [None],
                                    'top-node': None},
        loc('../../learn/fcs/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../learn/fcs/fcs.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../learn/fcs/fcs.py'),
                      'args')]},
        loc('../../learn/fcs/gcps.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../learn/fcs/gcps.py'),
                      'a')]},
        loc('../../learn/fcs/partition.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../learn/fcs/partition.py'),
                      'args')]},
        loc('../../learn/fcs/plotreds.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../learn/fcs/plotreds.py'),
                      'args')]},
        loc('../../learn/flowers.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../learn/flowers.py'),
                             '_')]],
        'top-node': [('generic attribute',
                      loc('../../learn/flowers.py'),
                      'args')]},
        loc('../../learn/train.py'): {'expanded-nodes': [],
                                      'selected-nodes': [[('generic attribute',
        loc('../../learn/train.py'),
        '_')]],
                                      'top-node': [('generic attribute',
        loc('../../learn/train.py'),
        'alpha')]},
        loc('../../smac/book/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../smac/book/large-markov.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../smac/book/large-markov.py'),
                      'args')]},
        loc('../../smac/book/markovdiscretepebble.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../smac/book/markovdiscretepebble.py'),
                      'args')]},
        loc('../../smac/book/template.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../smac/book/template.py'),
                      'args')]},
        loc('configure.py'): {'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': None},
        loc('timing.py'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': [('generic attribute',
        loc('timing.py'),
        'args')]}},
                                'browse_mode': 'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {'Derived Classes': False,
        'Imported': False,
        'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': 'color',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': 'checkpoint_callback',
                                       'fReverse': False,
                                       'fSearchText': 'smgb',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2,
                       'sel-line-start': 159,
                       'selection_end': 159,
                       'selection_start': 159,
                       'zoom': 0}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('timing.py'),
        {'attrib-starts': [],
         'code-line': '        print (key,mean(value),stdev(value))\r\n',
         'first-line': 67,
         'folded-linenos': [],
         'sel-line': 80,
         'sel-line-start': 3215,
         'selection_end': 3257,
         'selection_start': 3257,
         'zoom': 0},
        1754338581.6817133],
        [loc('../../AppData/Local/Programs/Python/Python312/Lib/statistics.py'),
         {'attrib-starts': [('stdev|0|',
                             958)],
          'code-line': "        raise StatisticsError('stdev requires at least two data points')\r\n",
          'first-line': 950,
          'folded-linenos': [],
          'sel-line': 969,
          'sel-line-start': 32883,
          'selection_end': 32883,
          'selection_start': 32883,
          'zoom': 0},
         1754338608.8141937],
        [loc('timing.py'),
         {'attrib-starts': [],
          'code-line': '    delta = 0.005\r\n',
          'first-line': 74,
          'folded-linenos': [],
          'sel-line': 84,
          'sel-line-start': 3273,
          'selection_end': 3290,
          'selection_start': 3290,
          'zoom': 0},
         1754344224.6364408],
        [loc('timing.py'),
         {'attrib-starts': [('parse_arguments|0|',
                             27)],
          'code-line': "    parser.add_argument('-d', '--delta', type=float, default=100000, help='Number of iterations')\r\n",
          'first-line': 18,
          'folded-linenos': [],
          'sel-line': 35,
          'sel-line-start': 1665,
          'selection_end': 1716,
          'selection_start': 1716,
          'zoom': 0},
         1754347704.0217652],
        [loc('timing.py'),
         {'attrib-starts': [],
          'code-line': '    \r\n',
          'first-line': 77,
          'folded-linenos': [],
          'sel-line': 84,
          'sel-line-start': 3279,
          'selection_end': 3283,
          'selection_start': 3283,
          'zoom': 0},
         1754347728.2750604],
        [loc('timing.py'),
         {'attrib-starts': [('parse_arguments|0|',
                             27)],
          'code-line': '    return parser.parse_args()\r\n',
          'first-line': 25,
          'folded-linenos': [],
          'sel-line': 36,
          'sel-line-start': 1762,
          'selection_end': 1792,
          'selection_start': 1792,
          'zoom': 0},
         1754347759.7121055],
        [loc('timing.py'),
         {'attrib-starts': [],
          'code-line': '    ax.set_xlim((0,args.delta))\r\n',
          'first-line': 79,
          'folded-linenos': [],
          'sel-line': 89,
          'sel-line-start': 3530,
          'selection_end': 3554,
          'selection_start': 3554,
          'zoom': 0},
         1754347822.8627746],
        [loc('timing.py'),
         {'attrib-starts': [],
          'code-line': '    ax.set_xlim((0,args.delta))\r\n',
          'first-line': 51,
          'folded-linenos': [],
          'sel-line': 89,
          'sel-line-start': 3530,
          'selection_end': 3554,
          'selection_start': 3554,
          'zoom': 0},
         1754347852.8278139],
        [loc('timing.py'),
         {'attrib-starts': [('parse_arguments|0|',
                             27)],
          'code-line': "    parser.add_argument('file')\r\n",
          'first-line': 27,
          'folded-linenos': [],
          'sel-line': 36,
          'sel-line-start': 1725,
          'selection_end': 1754,
          'selection_start': 1754,
          'zoom': 0},
         1754347985.9474165],
        [loc('timing.py'),
         {'attrib-starts': [],
          'code-line': '    with open(join(args.input,args.file)) as f:\r\n',
          'first-line': 59,
          'folded-linenos': [],
          'sel-line': 66,
          'sel-line-start': 2639,
          'selection_end': 2679,
          'selection_start': 2679,
          'zoom': 0},
         1754348042.6672754],
        [loc('timing.py'),
         {'attrib-starts': [],
          'code-line': "            ax.hist(observations, n_bins, density=True, histtype='bar', stacked=True,\r\n",
          'first-line': 81,
          'folded-linenos': [],
          'sel-line': 88,
          'sel-line-start': 3367,
          'selection_end': 3409,
          'selection_start': 3409,
          'zoom': 0},
         1754348336.422259],
        [loc('timing.py'),
         {'attrib-starts': [],
          'code-line': '\r\n',
          'first-line': 20,
          'folded-linenos': [],
          'sel-line': 27,
          'sel-line-start': 1019,
          'selection_end': 1019,
          'selection_start': 1019,
          'zoom': 0},
         1754348381.519204],
        [loc('timing.py'),
         {'attrib-starts': [],
          'code-line': "            ax.hist(observations, args.bins, density=True, histtype='bar', stacked=True,\r\n",
          'first-line': 86,
          'folded-linenos': [],
          'sel-line': 99,
          'sel-line-start': 3834,
          'selection_end': 3877,
          'selection_start': 3877,
          'zoom': 0},
         1754348526.6986315],
        [loc('timing.py'),
         {'attrib-starts': [('extract_observations|0|',
                             52)],
          'code-line': '\r\n',
          'first-line': 56,
          'folded-linenos': [],
          'sel-line': 72,
          'sel-line-start': 2969,
          'selection_end': 2969,
          'selection_start': 2969,
          'zoom': 0},
         1754348722.178724],
        [loc('timing.py'),
         {'attrib-starts': [],
          'code-line': 'def extract_observations(file_name):\r\n',
          'first-line': 51,
          'folded-linenos': [],
          'sel-line': 52,
          'sel-line-start': 2282,
          'selection_end': 2316,
          'selection_start': 2316,
          'zoom': 0},
         1754348910.0164552],
        [loc('timing.py'),
         {'attrib-starts': [],
          'code-line': '#!/usr/bin/env python\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0,
          'zoom': 0},
         1754516735.3016384],
        [loc('timing.py'),
         {'attrib-starts': [],
          'code-line': '    elapsed = time() - start\n',
          'first-line': 96,
          'folded-linenos': [],
          'sel-line': 110,
          'sel-line-start': 4203,
          'selection_end': 4212,
          'selection_start': 4212,
          'zoom': 0},
         1754516755.177507],
        [loc('timing.py'),
         {'attrib-starts': [],
          'code-line': "'''Determine execution times for sections of code'''\n",
          'first-line': 24,
          'folded-linenos': [],
          'sel-line': 17,
          'sel-line-start': 707,
          'selection_end': 756,
          'selection_start': 756,
          'zoom': 0},
         1754517049.094934],
        [loc('timing.py'),
         {'attrib-starts': [],
          'code-line': '            \n',
          'first-line': 95,
          'folded-linenos': [],
          'sel-line': 105,
          'sel-line-start': 4022,
          'selection_end': 4034,
          'selection_start': 4034,
          'zoom': 0},
         1754517093.7425082],
        [loc('timing.py'),
         {'attrib-starts': [('parse_arguments|0|',
                             28)],
          'code-line': "    parser.add_argument('--bins', default='scott', type=get_bins, help = 'Binning strategy or number of bins')\n",
          'first-line': 25,
          'folded-linenos': [],
          'sel-line': 37,
          'sel-line-start': 1707,
          'selection_end': 1755,
          'selection_start': 1755,
          'zoom': 0},
         1754517141.8833263]],
        20),
        'current-loc': None,
        'editor-state-list': [],
        'has-focus': True,
        'locked': False},
        []),
                               'open_files': []},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           0),
                          1754517140.9796288),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    3),
                                   1753991803.3974922),
                 'user_data': {}},
        'window-alloc': (33,
                         227,
                         1276,
                         734)}]}
guimgr.recent-documents = [loc('timing.py')]
guimgr.visual-state = {loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/PIL/Image.py'): {'attrib-starts': [],
        'code-line': 'from . import (\r\n',
        'first-line': 44,
        'folded-linenos': [],
        'sel-line': 49,
        'sel-line-start': 1229,
        'selection_end': 1229,
        'selection_start': 1229,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python312/Lib/statistics.py'): {'attrib-starts': [('stdev|0|',
        958)],
        'code-line': "        raise StatisticsError('stdev requires at least two data points')\r\n",
        'first-line': 950,
        'folded-linenos': [],
        'sel-line': 969,
        'sel-line-start': 32883,
        'selection_end': 32883,
        'selection_start': 32883,
        'zoom': 0},
                       loc('../../smac/book/template.py'): {'attrib-starts': [('parse_arguments|0|',
        27)],
        'code-line': "    parser.add_argument('-o', '--out', default = basename(splitext(__file__)[0]),help='Name of output file')\r\n",
        'first-line': 19,
        'folded-linenos': [],
        'sel-line': 31,
        'sel-line-start': 1163,
        'selection_end': 1271,
        'selection_start': 1166,
        'zoom': 0},
                       loc('configure.py'): {'attrib-starts': [('Plummer|0|',
        117)],
        'code-line': '                       radius=1.0):             # TODO\r\n',
        'first-line': 2,
        'folded-linenos': [],
        'sel-line': 119,
        'sel-line-start': 3666,
        'selection_end': 3699,
        'selection_start': 3699,
        'zoom': 0},
                       loc('timing.py'): {'attrib-starts': [('parse_arguments|0|',
        28)],
        'code-line': "    parser.add_argument('--bins', default='scott', type=get_bins, help = 'Binning strategy or number of bins')\n",
        'first-line': 23,
        'folded-linenos': [],
        'sel-line': 37,
        'sel-line-start': 1707,
        'selection_end': 1755,
        'selection_start': 1755,
        'zoom': 0}}
