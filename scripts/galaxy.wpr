#!wing
#!version=10.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.file-list = [loc('adze.py'),
                  loc('configure.py'),
                  loc('make_3d.py'),
                  loc('make_img.py'),
                  loc('momenta.py'),
                  loc('plot_energy.py'),
                  loc('plot_orbits.py'),
                  loc('README.md'),
                  loc('timing.py'),
                  loc('utils.py')]
proj.file-type = 'normal'
proj.launch-config = {loc('configure.py'): ('project',
        ('--show',
         '')),
                      loc('make_3d.py'): ('project',
        (' --extract  --resume',
         '')),
                      loc('momenta.py'): ('project',
        ('galaxy-2025-08-09-11-42-25.log --show',
         '')),
                      loc('plot_orbits.py'): ('project',
        (' --show  --path C:\\cygwin64\\home\\Weka\\galaxy\\configs  --centered ',
         '')),
                      loc('timing.py'): ('project',
        ('galaxy-2025-08-04-20-31-48.log --show',
         ''))}
[user attributes]
debug.recent-run-args = {loc('configure.py'): ['--show',
        '--show  --xml collision.xml'],
                         loc('make_3d.py'): [' --extract  --resume',
        ' --extract',
        ' --extract --resume',
        ' --extract ',
        ' --extract  --cube --resume',
        ' --extract  --cube ',
        ' --extract  --cube   --resume',
        ' --extract  --cube  --overwrite --resume',
        ' --extract  --cube',
        ' --movie --play',
        '--extract --movie --play --max 50  --cube',
        '--extract --movie --play --max 50  --scale_to_cube',
        '--extract --movie --play --max 50',
        '--play',
        '--extract --max 25 --movie',
        '--movie',
        '--extract --cube',
        '--movie_only quux.mp4',
        '--play --movie baz.mp4',
        '--play baz.mp4',
        '--movie_only baz.mp4',
        '--movie_only bar.mp4',
        '--movie_only foo',
        '--movie_only',
        '--make_move_only'],
                         loc('momenta.py'): ['galaxy-2025-08-09-11-42-25.log --show',
        '--show'],
                         loc('plot_orbits.py'): [' --show  --path C:\\cygwin64\\home\\Weka\\galaxy\\configs  --centered ',
        ' --show  --path C:\\cygwin64\\home\\Weka\\galaxy\\configs  --centered -K 1',
        ' --show  --path C:\\cygwin64\\home\\Weka\\galaxy\\configs  --centered -K 12',
        ' --show  --path C:\\cygwin64\\home\\Weka\\galaxy\\configs  --centered -K 5',
        ' --show  --path C:\\cygwin64\\home\\Weka\\galaxy\\configs  --centred -K 5',
        ' --show  --path C:\\cygwin64\\home\\Weka\\galaxy\\configs  --centre -K 5',
        ' --show  --path C:\\cygwin64\\home\\Weka\\galaxy\\configs  --centre -K 12',
        ' --show  --path C:\\cygwin64\\home\\Weka\\galaxy\\configs  --centre -K 12 -m 200',
        ' --show  --path C:\\cygwin64\\home\\Weka\\galaxy\\configs  --centre -K 12 -m 100',
        ' --show  --path C:\\cygwin64\\home\\Weka\\galaxy\\configs  --centre --K 12',
        ' --show  --path C:\\cygwin64\\home\\Weka\\galaxy\\configs  --centre ',
        ' --show  --path C:\\cygwin64\\home\\Weka\\galaxy\\configs  --centre -K 100',
        ' --show  --path C:\\cygwin64\\home\\Weka\\galaxy\\configs  --centre --K 100',
        ' --show  --path C:\\cygwin64\\home\\Weka\\galaxy\\configs  --centre',
        '-K 7 --show  --path C:\\cygwin64\\home\\Weka\\galaxy\\configs',
        '-K 1 --show  --path C:\\cygwin64\\home\\Weka\\galaxy\\configs',
        '-K 12 --show  --path C:\\cygwin64\\home\\Weka\\galaxy\\configs',
        '-K 12 --show -m 100 --path C:\\cygwin64\\home\\Weka\\galaxy\\configs',
        '-K 12 --show -m 100',
        '-K 12 --show -m -1',
        '-n 12 --show -m -1',
        '--help',
        '-n 12 --show -o foo --title bar',
        '-n 12 --show',
        '-n 12'],
                         loc('timing.py'): ['galaxy-2025-08-04-20-31-48.log --show',
        'galaxy-2025-08-04-20-31-48.log --show  --bins scott',
        'galaxy-2025-08-04-20-31-48.log --show  --bins doane',
        'galaxy-2025-08-04-20-31-48.log --show  --bins 25',
        '--show']}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'dtaAtJloNhSft7SabFzspl0xqEmVIDbK',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [3],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../../../../Program Files/Wing Personal 10/resources/builtin-pi-files/__os__/win32/3.12/builtins.pi'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../Program Files/Wing Personal 10/resources/builtin-pi-files/__os__/win32/3.12/builtins.pi'),
                      'abs')]},
        loc('../../../../../Users/Weka/AppData/Local/Programs/Python/Python312/Lib/ntpath.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../Users/Weka/AppData/Local/Programs/Python/Python312/Lib/ntpath.py'),
                      'abspath')]},
        loc('../../../../../Users/Weka/AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/markers.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../Users/Weka/AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/markers.py'),
                      'CARETDOWN')]},
        loc('../../../../../Users/Weka/AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../Users/Weka/AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/__init__.pyi'),
                      'absolute')]},
        loc('../../../../../Users/Weka/AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/lib/function_base.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../../Users/Weka/AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/lib/function_base.py'),
                             '__all__')]],
        'top-node': [('function def',
                      loc('../../../../../Users/Weka/AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/lib/function_base.py'),
                      'angle')]},
        loc('../../../../../Users/Weka/smac/book/template.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../../../../Users/Weka/smac/book/template.py'),
                             'get_file_name')]],
        'top-node': [('generic attribute',
                      loc('../../../../../Users/Weka/smac/book/template.py'),
                      'args')]},
        loc('../../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/lib/npyio.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/lib/npyio.py'),
                      'array_function_dispatch')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/PIL/Image.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/PIL/Image.py'),
                      'alpha_composite')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/statistics.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/statistics.py'),
                      'correlation')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/framework/func_graph.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/framework/func_graph.py'),
                      'check_mutation')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/keras/layers/core.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/keras/layers/core.py'),
                      'Activation')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'),
                      'ADAPTIVE')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'),
                      'Axes')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'),
                      '_AxesBase')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'),
                      'GridSpec')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'),
                      'TexManager')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/numpy/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/numpy/conftest.py'),
                      '')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'),
                      'bool_t')]},
        loc('../../anaconda3/Lib/_collections_abc.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../anaconda3/Lib/_collections_abc.py'),
                      'AsyncGenerator')]},
        loc('../../bioinformatics/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../complexity/el-farol/bar.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../complexity/el-farol/bar.py'),
                      'ElFarol')]},
        loc('../../dynamics/chaos_book/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../dynamics/chaos_book/chapter9/pinball.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/chaos_book/chapter9/pinball.py'),
                      'args')]},
        loc('../../learn/README.md'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('../../learn/bayes1.py'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('generic attribute',
        loc('../../learn/bayes1.py'),
        'alphas')]},
        loc('../../learn/cavi1.py'): {'expanded-nodes': [],
                                      'selected-nodes': [[('generic attribute',
        loc('../../learn/cavi1.py'),
        'ys')]],
                                      'top-node': [('generic attribute',
        loc('../../learn/cavi1.py'),
        'ax1')]},
        loc('../../learn/fashion.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../learn/fashion.py'),
                             '_')]],
        'top-node': [('generic attribute',
                      loc('../../learn/fashion.py'),
                      'class_names')]},
        loc('../../learn/fcs.py'): {'expanded-nodes': [],
                                    'selected-nodes': [None],
                                    'top-node': None},
        loc('../../learn/fcs/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../learn/fcs/fcs.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../learn/fcs/fcs.py'),
                      'args')]},
        loc('../../learn/fcs/gcps.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../learn/fcs/gcps.py'),
                      'a')]},
        loc('../../learn/fcs/partition.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../learn/fcs/partition.py'),
                      'args')]},
        loc('../../learn/fcs/plotreds.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../learn/fcs/plotreds.py'),
                      'args')]},
        loc('../../learn/flowers.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../learn/flowers.py'),
                             '_')]],
        'top-node': [('generic attribute',
                      loc('../../learn/flowers.py'),
                      'args')]},
        loc('../../learn/train.py'): {'expanded-nodes': [],
                                      'selected-nodes': [[('generic attribute',
        loc('../../learn/train.py'),
        '_')]],
                                      'top-node': [('generic attribute',
        loc('../../learn/train.py'),
        'alpha')]},
        loc('../../smac/book/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../smac/book/large-markov.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../smac/book/large-markov.py'),
                      'args')]},
        loc('../../smac/book/markovdiscretepebble.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../smac/book/markovdiscretepebble.py'),
                      'args')]},
        loc('../../smac/book/template.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../smac/book/template.py'),
                      'args')]},
        loc('README.md'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': None},
        loc('adze.py'): {'expanded-nodes': [],
                         'selected-nodes': [],
                         'top-node': [('generic attribute',
                                       loc('adze.py'),
                                       'args')]},
        loc('configure.py'): {'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': [('generic attribute',
        loc('configure.py'),
        'args')]},
        loc('make_3d.py'): {'expanded-nodes': [[('class def',
        loc('make_3d.py'),
        'ConfigurationPlotter')]],
                            'selected-nodes': [[('function def',
        loc('make_3d.py'),
        'ConfigurationPlotter|0|.plot_configuration'),
        ('function def',
         loc('make_3d.py'),
         'ConfigurationPlotter|0|.plot_configuration')]],
                            'top-node': [('instance attribute',
        loc('make_3d.py'),
        'ConfigurationPlotter|0|:.colours'),
        ('instance attribute',
         loc('make_3d.py'),
         'ConfigurationPlotter|0|:.colours')]},
        loc('momenta.py'): {'expanded-nodes': [],
                            'selected-nodes': [[('generic attribute',
        loc('momenta.py'),
        'start')]],
                            'top-node': [('generic attribute',
        loc('momenta.py'),
        'args')]},
        loc('plot_energy.py'): {'expanded-nodes': [],
                                'selected-nodes': [],
                                'top-node': [('generic attribute',
        loc('plot_energy.py'),
        'args')]},
        loc('plot_orbits.py'): {'expanded-nodes': [],
                                'selected-nodes': [],
                                'top-node': [('generic attribute',
        loc('plot_orbits.py'),
        'args')]},
        loc('timing.py'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': [('generic attribute',
        loc('timing.py'),
        'args')]},
        loc('utils.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('function def',
        loc('utils.py'),
        'find_seq')]}},
                                'browse_mode': 'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {'Derived Classes': False,
        'Imported': False,
        'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': 'find_seq',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': 'remainder',
                                       'fReverse': False,
                                       'fSearchText': 'split',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 3030,
                       'folded-linenos': [],
                       'history': {None: ['def create_xkcd_colours(file_name = \'rgb.txt\',\n                        prefix = \'xkcd:\',\n                        filter = lambda R,G,B:True):\n    \'\'\'\n    Create list of XKCD colours\n\n    Parameters:\n        file_name Where XKCD colours live\n        prefix    Use to prefix each colour with "xkcd:"\n        filter    Allows us to exclude some colours based on RGB values\n    \'\'\'\n    with open(file_name) as colours:\n        for row in colours:\n            parts = split(r\'\\s+#\',row.strip())\n            if len(parts) > 1:\n                rgb = int(parts[1],16)\n                B = rgb % 256\n                remainder = (rgb - B) // 256\n                G = remainder % 256\n                R = (remainder - G) // 256\n                if filter(R,G,B):\n                    yield f\'{prefix}{parts[0]}\'\n',
        'from re import split\n',
        'for c in create_xkcd_colours():\n    print (c)\n\n',
        "for c in create_xkcd_colours():\n    print (c)\nfor c in create_xkcd_colours(file_name='dckx.txt'):\n    print (c)\n\n",
        'c.get[0]\n',
        'c.get(0)\n',
        'c.get(1)\n',
        'c[1]\n',
        'c[5]\n',
        'import numpy as np\n',
        'c = ColourModel()\n',
        'c[1024]\n',
        'c[0]\n',
        'c[43]\n']},
                       'launch-id': None,
                       'sel-line': 3035,
                       'sel-line-start': 52901,
                       'selection_end': 52901,
                       'selection_start': 52901,
                       'zoom': 0}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('make_3d.py'),
        {'attrib-starts': [('ConfigurationPlotter|0|',
                            52),
                           ('ConfigurationPlotter|0|.plot_configuration|0|',
                            75)],
         'code-line': '            n = get_file_name()\r\n',
         'first-line': 99,
         'folded-linenos': [],
         'sel-line': 101,
         'sel-line-start': 3649,
         'selection_end': 3679,
         'selection_start': 3679,
         'zoom': 0},
        1756620571.4561014],
        [loc('make_3d.py'),
         {'attrib-starts': [],
          'code-line': "def get_file_name(name = basename(splitext(__file__)[0]),default_ext='npz'):\r\n",
          'first-line': 27,
          'folded-linenos': [],
          'sel-line': 35,
          'sel-line-start': 1279,
          'selection_end': 1301,
          'selection_start': 1301,
          'zoom': 0},
         1756620600.5896575],
        [loc('make_3d.py'),
         {'attrib-starts': [('get_file_name|0|',
                             35)],
          'code-line': "    return f'{base}.{ext}'\r\n",
          'first-line': 45,
          'folded-linenos': [],
          'sel-line': 49,
          'sel-line-start': 1710,
          'selection_end': 1721,
          'selection_start': 1721,
          'zoom': 0},
         1756620694.9446356],
        [loc('make_3d.py'),
         {'attrib-starts': [('get_file_name|0|',
                             35)],
          'code-line': "    return f'{base}.{ext}'\r\n",
          'first-line': 120,
          'folded-linenos': [],
          'sel-line': 49,
          'sel-line-start': 1710,
          'selection_end': 1721,
          'selection_start': 1721,
          'zoom': 0},
         1756620705.4059248],
        [loc('make_3d.py'),
         {'attrib-starts': [('ConfigurationPlotter|0|',
                             52),
                            ('ConfigurationPlotter|0|.plot_configuration|0|',
                             75)],
          'code-line': '        colours = np.vectorize(lambda index : self.colours[index])(self.indices)\r\n',
          'first-line': 96,
          'folded-linenos': [],
          'sel-line': 103,
          'sel-line-start': 3669,
          'selection_end': 3669,
          'selection_start': 3669,
          'zoom': 0},
         1756620709.4198174],
        [loc('make_3d.py'),
         {'attrib-starts': [('ConfigurationPlotter|0|',
                             52),
                            ('ConfigurationPlotter|0|.plot_configuration|0|',
                             75)],
          'code-line': '        colours = np.vectorize(lambda index : self.colours[index])(self.indices)\r\n',
          'first-line': 98,
          'folded-linenos': [],
          'sel-line': 103,
          'sel-line-start': 3669,
          'selection_end': 3669,
          'selection_start': 3669,
          'zoom': 0},
         1756620717.1441355],
        [loc('make_3d.py'),
         {'attrib-starts': [('ConfigurationPlotter|0|',
                             52),
                            ('ConfigurationPlotter|0|.plot_configuration|0|',
                             75)],
          'code-line': '        colours = np.vectorize(lambda index : self.colours[index])(self.indices)\r\n',
          'first-line': 200,
          'folded-linenos': [],
          'sel-line': 103,
          'sel-line-start': 3669,
          'selection_end': 3669,
          'selection_start': 3669,
          'zoom': 0},
         1756620723.0095706],
        [loc('make_3d.py'),
         {'attrib-starts': [('ConfigurationPlotter|0|',
                             52),
                            ('ConfigurationPlotter|0|.plot_configuration|0|',
                             75)],
          'code-line': '            np.savez(get_file_name(),self.indices,self.limits)\r\n',
          'first-line': 103,
          'folded-linenos': [],
          'sel-line': 101,
          'sel-line-start': 3634,
          'selection_end': 3696,
          'selection_start': 3696,
          'zoom': 0},
         1756620825.2164207],
        [loc('make_3d.py'),
         {'attrib-starts': [('ConfigurationPlotter|0|',
                             52),
                            ('ConfigurationPlotter|0|.plot_configuration|0|',
                             75)],
          'code-line': '            np.savez(get_file_name(),self.indices,self.limits)\r\n',
          'first-line': 312,
          'folded-linenos': [],
          'sel-line': 101,
          'sel-line-start': 3634,
          'selection_end': 3696,
          'selection_start': 3696,
          'zoom': 0},
         1756620877.7945998],
        [loc('make_3d.py'),
         {'attrib-starts': [('ConfigurationPlotter|0|',
                             52),
                            ('ConfigurationPlotter|0|.plot_configuration|0|',
                             75)],
          'code-line': '            np.savez(get_file_name(),self.indices,self.limits)\r\n',
          'first-line': 230,
          'folded-linenos': [],
          'sel-line': 101,
          'sel-line-start': 3634,
          'selection_end': 3696,
          'selection_start': 3696,
          'zoom': 0},
         1756620941.4342937],
        [loc('make_3d.py'),
         {'attrib-starts': [('ConfigurationPlotter|0|',
                             52),
                            ('ConfigurationPlotter|0|.plot_configuration|0|',
                             75)],
          'code-line': '            np.savez(get_file_name(),self.indices,self.limits)\r\n',
          'first-line': 94,
          'folded-linenos': [],
          'sel-line': 101,
          'sel-line-start': 3634,
          'selection_end': 3696,
          'selection_start': 3696,
          'zoom': 0},
         1756621037.1869276],
        [loc('make_3d.py'),
         {'attrib-starts': [],
          'code-line': '                z=0\r\n',
          'first-line': 269,
          'folded-linenos': [],
          'sel-line': 287,
          'sel-line-start': 11123,
          'selection_end': 11123,
          'selection_start': 11123,
          'zoom': 0},
         1756621092.8537219],
        [loc('make_3d.py'),
         {'attrib-starts': [],
          'code-line': '                restarting = True\r\n',
          'first-line': 275,
          'folded-linenos': [],
          'sel-line': 284,
          'sel-line-start': 11018,
          'selection_end': 11051,
          'selection_start': 11051,
          'zoom': 0},
         1756621417.6109953],
        [loc('make_3d.py'),
         {'attrib-starts': [],
          'code-line': '                restarting = True\r\n',
          'first-line': 214,
          'folded-linenos': [],
          'sel-line': 284,
          'sel-line-start': 11018,
          'selection_end': 11051,
          'selection_start': 11051,
          'zoom': 0},
         1756621418.1507766],
        [loc('make_3d.py'),
         {'attrib-starts': [('ConfigurationPlotter|0|',
                             52)],
          'code-line': '    def plot_configuration(self,fname_in,restarting = False):\r\n',
          'first-line': 64,
          'folded-linenos': [],
          'sel-line': 75,
          'sel-line-start': 2398,
          'selection_end': 2424,
          'selection_start': 2406,
          'zoom': 0},
         1756621421.9419572],
        [loc('make_3d.py'),
         {'attrib-starts': [('ConfigurationPlotter|0|',
                             52)],
          'code-line': '    def plot_configuration(self,fname_in,restarting = False):\r\n',
          'first-line': 118,
          'folded-linenos': [],
          'sel-line': 75,
          'sel-line-start': 2398,
          'selection_end': 2424,
          'selection_start': 2406,
          'zoom': 0},
         1756621424.603564],
        [loc('make_3d.py'),
         {'attrib-starts': [('ConfigurationPlotter|0|',
                             52)],
          'code-line': '    def plot_configuration(self,fname_in,restarting = False):\r\n',
          'first-line': 106,
          'folded-linenos': [],
          'sel-line': 75,
          'sel-line-start': 2398,
          'selection_end': 2424,
          'selection_start': 2406,
          'zoom': 0},
         1756621429.1176488],
        [loc('make_3d.py'),
         {'attrib-starts': [('ConfigurationPlotter|0|',
                             52),
                            ('ConfigurationPlotter|0|.plot_configuration|0|',
                             75)],
          'code-line': "            self.indices = npzfile['indices']\r\n",
          'first-line': 87,
          'folded-linenos': [],
          'sel-line': 98,
          'sel-line-start': 3481,
          'selection_end': 3526,
          'selection_start': 3526,
          'zoom': 0},
         1756622432.496348],
        [loc('make_3d.py'),
         {'attrib-starts': [('ConfigurationPlotter|0|',
                             52),
                            ('ConfigurationPlotter|0|.plot_configuration|0|',
                             75)],
          'code-line': '                self.limits[:,j] = self.get_limits(positions[:,j])            \r\n',
          'first-line': 85,
          'folded-linenos': [],
          'sel-line': 105,
          'sel-line-start': 3762,
          'selection_end': 3840,
          'selection_start': 3840,
          'zoom': 0},
         1756622506.9097974],
        [loc('make_3d.py'),
         {'attrib-starts': [('ConfigurationPlotter|0|',
                             52),
                            ('ConfigurationPlotter|0|.get_limits|0|',
                             124)],
          'code-line': '\r\n',
          'first-line': 117,
          'folded-linenos': [],
          'sel-line': 135,
          'sel-line-start': 4870,
          'selection_end': 4870,
          'selection_start': 4870,
          'zoom': 0},
         1756623331.8543935]],
        20),
        'current-loc': None,
        'editor-state-list': [],
        'has-focus': True,
        'locked': False},
        []),
                               'open_files': []},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           0),
                          1756622728.4113076),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    3),
                                   1756592750.9651146),
                 'user_data': {}},
        'window-alloc': (28,
                         -1,
                         1360,
                         732)}]}
guimgr.recent-documents = [loc('../../../../../Users/Weka/smac/book/template.py')]
guimgr.visual-state = {loc('../../../../../Program Files/Wing Personal 10/resources/builtin-pi-files/__os__/win32/3.12/builtins.pi'): {'attrib-starts': [],
        'code-line': 'def len(obj):\n',
        'first-line': 1923,
        'folded-linenos': [],
        'sel-line': 1935,
        'sel-line-start': 57481,
        'selection_end': 57488,
        'selection_start': 57485,
        'zoom': 0},
                       loc('../../../../../Program Files/Wing Personal 10/resources/typeshed/stdlib/3/os/__init__.pyi'): {'attrib-starts': [],
        'code-line': 'def urandom(__size: int) -> bytes: ...\n',
        'first-line': 781,
        'folded-linenos': [],
        'sel-line': 793,
        'sel-line-start': 27494,
        'selection_end': 27505,
        'selection_start': 27498,
        'zoom': 0},
                       loc('../../../../../Users/Weka/AppData/Local/Programs/Python/Python312/Lib/argparse.py'): {'attrib-starts': [('_ActionsContainer|0|',
        1356),
        ('_ActionsContainer|0|.add_argument|0|',
         1440)],
        'code-line': '        action = action_class(**kwargs)\r\n',
        'first-line': 1466,
        'folded-linenos': [],
        'sel-line': 1471,
        'sel-line-start': 53489,
        'selection_end': 53489,
        'selection_start': 53489,
        'zoom': 0},
                       loc('../../../../../Users/Weka/AppData/Local/Programs/Python/Python312/Lib/ntpath.py'): {'attrib-starts': [('join|0|',
        106)],
        'code-line': '    path = os.fspath(path)\r\n',
        'first-line': 88,
        'folded-linenos': [],
        'sel-line': 107,
        'sel-line-start': 3582,
        'selection_end': 3582,
        'selection_start': 3582,
        'zoom': 0},
                       loc('../../../../../Users/Weka/AppData/Local/Programs/Python/Python312/Lib/site-packages/PIL/Image.py'): {'attrib-starts': [('Image|0|',
        466),
        ('Image|0|.save|0|',
         2352)],
        'code-line': '                fp = builtins.open(filename, "w+b")\r\n',
        'first-line': 171,
        'folded-linenos': [],
        'sel-line': 2434,
        'sel-line-start': 86823,
        'selection_end': 86823,
        'selection_start': 86823,
        'zoom': 0},
                       loc('../../../../../Users/Weka/AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/colors.py'): {'attrib-starts': [('_to_rgba_no_colorcycle|0|',
        324)],
        'code-line': '        raise ValueError(f"Invalid RGBA argument: {orig_c!r}")\n',
        'first-line': 374,
        'folded-linenos': [],
        'sel-line': 393,
        'sel-line-start': 13071,
        'selection_end': 13071,
        'selection_start': 13071,
        'zoom': 0},
                       loc('../../../../../Users/Weka/AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/markers.py'): {'attrib-starts': [('MarkerStyle|0|',
        149),
        ('MarkerStyle|0|._set_marker|0|',
         298)],
        'code-line': '                raise ValueError(\n',
        'first-line': 309,
        'folded-linenos': [],
        'sel-line': 328,
        'sel-line-start': 12572,
        'selection_end': 12572,
        'selection_start': 12572,
        'zoom': 0},
                       loc('../../../../../Users/Weka/AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/texmanager.py'): {'attrib-starts': [('TexManager|0|',
        55),
        ('TexManager|0|._run_checked_subprocess|0|',
         246)],
        'code-line': '            raise RuntimeError(\n',
        'first-line': 238,
        'folded-linenos': [],
        'sel-line': 257,
        'sel-line-start': 10129,
        'selection_end': 10129,
        'selection_start': 10129,
        'zoom': 0},
                       loc('../../../../../Users/Weka/AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/__init__.py'): {'attrib-starts': [('__getattr__|0|',
        303)],
        'code-line': '            raise AttributeError(__former_attrs__[attr])\r\n',
        'first-line': 327,
        'folded-linenos': [],
        'sel-line': 337,
        'sel-line-start': 12049,
        'selection_end': 12049,
        'selection_start': 12049,
        'zoom': 0},
                       loc('../../../../../Users/Weka/AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/lib/function_base.py'): {'attrib-starts': [('average|0|',
        398)],
        'code-line': '                raise ValueError(\r\n',
        'first-line': 521,
        'folded-linenos': [],
        'sel-line': 540,
        'sel-line-start': 17679,
        'selection_end': 17679,
        'selection_start': 17679,
        'zoom': 0},
                       loc('../../../../../Users/Weka/smac/book/template.py'): {'attrib-starts': [('parse_arguments|0|',
        27)],
        'code-line': "    parser.add_argument('-o', '--out', default = basename(splitext(__file__)[0]),help='Name of output file')\r\n",
        'first-line': 24,
        'folded-linenos': [],
        'sel-line': 31,
        'sel-line-start': 1163,
        'selection_end': 1243,
        'selection_start': 1202,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/PIL/Image.py'): {'attrib-starts': [],
        'code-line': 'from . import (\r\n',
        'first-line': 44,
        'folded-linenos': [],
        'sel-line': 49,
        'sel-line-start': 1229,
        'selection_end': 1229,
        'selection_start': 1229,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python312/Lib/statistics.py'): {'attrib-starts': [('stdev|0|',
        958)],
        'code-line': "        raise StatisticsError('stdev requires at least two data points')\r\n",
        'first-line': 950,
        'folded-linenos': [],
        'sel-line': 969,
        'sel-line-start': 32883,
        'selection_end': 32883,
        'selection_start': 32883,
        'zoom': 0},
                       loc('../../smac/book/template.py'): {'attrib-starts': [('parse_arguments|0|',
        27)],
        'code-line': "    parser.add_argument('-o', '--out', default = basename(splitext(__file__)[0]),help='Name of output file')\r\n",
        'first-line': 19,
        'folded-linenos': [],
        'sel-line': 31,
        'sel-line-start': 1163,
        'selection_end': 1271,
        'selection_start': 1166,
        'zoom': 0},
                       loc('README.md'): {'attrib-starts': [],
        'code-line': 'momenta.py|Used to check whether momentum is being conserved -- Issue #72\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 11,
        'sel-line-start': 394,
        'selection_end': 401,
        'selection_start': 401,
        'zoom': 0},
                       loc('adze.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('configure.py'): {'attrib-starts': [],
        'code-line': '    minutes = int(elapsed/60)\r\n',
        'first-line': 100,
        'folded-linenos': [],
        'sel-line': 405,
        'sel-line-start': 14102,
        'selection_end': 14131,
        'selection_start': 14131,
        'zoom': 0},
                       loc('make_3d.py'): {'attrib-starts': [('ConfigurationPlotter|0|',
        52),
        ('ConfigurationPlotter|0|.get_limits|0|',
         124)],
        'code-line': '\r\n',
        'first-line': 117,
        'folded-linenos': [],
        'sel-line': 135,
        'sel-line-start': 4870,
        'selection_end': 4870,
        'selection_start': 4870,
        'zoom': 0},
                       loc('momenta.py'): {'attrib-starts': [],
        'code-line': "'''Used to check whether momentum is being conserved'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 724,
        'selection_end': 776,
        'selection_start': 776,
        'zoom': 0},
                       loc('plot_energy.py'): {'attrib-starts': [],
        'code-line': '            nn = utils.find_seq(path=args.out)\r\n',
        'first-line': 92,
        'folded-linenos': [],
        'sel-line': 111,
        'sel-line-start': 4677,
        'selection_end': 4708,
        'selection_start': 4700,
        'zoom': 0},
                       loc('plot_orbits.py'): {'attrib-starts': [('read_files|0|',
        82)],
        'code-line': "    path_names = sorted(glob(join(config_path, prefix) + f'*.{suffix}'))\r\n",
        'first-line': 100,
        'folded-linenos': [],
        'sel-line': 111,
        'sel-line-start': 4613,
        'selection_end': 4685,
        'selection_start': 4616,
        'zoom': 0},
                       loc('timing.py'): {'attrib-starts': [('parse_arguments|0|',
        28)],
        'code-line': "    parser.add_argument('--bins', default='scott', type=get_bins, help = 'Binning strategy or number of bins')\n",
        'first-line': 23,
        'folded-linenos': [],
        'sel-line': 37,
        'sel-line-start': 1707,
        'selection_end': 1755,
        'selection_start': 1755,
        'zoom': 0},
                       loc('utils.py'): {'attrib-starts': [],
        'code-line': "def find_seq(path='./imgs',prefix='energy',ext='png'):\r\n",
        'first-line': 16,
        'folded-linenos': [],
        'sel-line': 35,
        'sel-line-start': 1196,
        'selection_end': 1208,
        'selection_start': 1200,
        'zoom': 0}}
search.replace-history = ['remainder']
search.search-history = ['split',
                         'spilt',
                         'rest',
                         'remainder',
                         'find_seq',
                         'get_seq',
                         'glob',
                         'glo',
                         'gl',
                         'colours',
                         'shuffle',
                         'shu',
                         'galaxy',
                         'bodi',
                         'utils',
                         'uti',
                         'listd',
                         'get_distance',
                         'offset',
                         'random']
